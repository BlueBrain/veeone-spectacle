include:
  - project: viz/ci/gitlabpipelines
    file: index.yml

stages:
  - precheck
  - test-and-build
  - publish

variables:
  KUBERNETES_MEMORY_LIMIT: 4Gi
  KUBERNETES_MEMORY_REQUEST: 4Gi
  DOCKER_BUILD_ARGS: "--build-arg CI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA"

# Common configurations
.common-spectacle:
  tags:
    - kubernetes

.publish-spectacle:
  extends:
    - .common-spectacle
    - .publish-image-using-kaniko

.build-spectacle:
  stage: test-and-build
  extends:
    - .common-spectacle
    - .build-image-using-kaniko


# This stage checks whether we don't accidentally try to merge
# a feature or bugfix into the master branch directly.
# It will raise an error and stop the pipeline in that case.
check-branch-names:
  stage: precheck
  image:
    name: bash:latest
  script:
    - |-
      #!/bin/bash
      echo $SHELL
      echo "Commit revision: $CI_COMMIT_SHA ($CI_COMMIT_SHORT_SHA)"
      echo "Source branch: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
      echo "Target branch: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
      if [[ $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ ^(feature|bugfix) ]] && [[ $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" ]]
      then
        echo "Branch name check failed. You can't merge branches into master that start with 'feature' or 'bugfix'"
        exit 1
      else
        echo "Branch name check - OK"
      fi
  rules:
    - if: $CI_MERGE_REQUEST_IID


# This job build an image - all tests are assumed to be run in build phase (of the image).
build-docker:
  extends: .build-spectacle


# Once an MR is merged we want to publish the image according to the following rules.

# Every merge into develop ends up with a "latest" tag
publish-develop:
  extends: .publish-spectacle
  variables:
    REGISTRY_IMAGE_TAG: latest
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" && $SANDBOX == null

# We can publish every branch into a "sandbox" instance by running a manual pipeline
# and providing a "SANDBOX" variable that is a number 1-3 indicating target sandbox environment.
publish-sandbox:
  extends: .publish-spectacle
  variables:
    REGISTRY_IMAGE_TAG: sandbox-$SANDBOX
  rules:
    - if: $SANDBOX =~ /^[1-3]$/

# Once a version tag is appended and commit goes into master - we create a version tag for the image.
publish-version:
  extends: .publish-spectacle
  variables:
    REGISTRY_IMAGE_TAG: $CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+(\.[0-9]+)?$/

publish-stable:
  extends: .publish-spectacle
  variables:
    REGISTRY_IMAGE_TAG: stable
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
